<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhuxi.mapper.musicMapper">
    
    <insert id="addMusic">
        INSERT INTO music(title, singer, lyric, composition, company, album, lyric_data, duration, file_path, uploader_id, bitrate, code_type, format)
        VALUES(#{title}, #{singer}, #{lyric}, #{composition},  #{company}, #{album}, #{lyricData}, #{duration}, #{filePath}, #{uploaderId}, #{bitrate}, #{codeType}, #{format})
    </insert>

    <resultMap id="musicDTOMap" type="com.zhuxi.DTO.MusicDTO">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="singer" column="singer"/>
        <result property="lyric" column="lyric"/>
        <result property="composition" column="composition"/>
        <result property="company" column="company"/>
        <result property="album" column="album"/>
        <result property="lyricData" column="lyric_data"/>
        <result property="duration" column="duration"/>
        <result property="filePath" column="file_path"/>
        <result property="uploaderId" column="uploader_id"/>
        <result property="bitrate" column="bitrate"/>
        <result property="codeType" column="code_type"/>
        <result property="format" column="format"/>
    </resultMap>

    <!--分页查询-->
    <select id="selectMusicList" resultMap="musicDTOMap">
        SELECT id,
               title,
               singer,
               lyric,
               composition,
               company,
               album,
               lyric_data,
               duration,
               file_path,
               uploader_id,
               bitrate,
               code_type,
               format
        FROM music
        WHERE id > #{lastId}
        ORDER BY id ASC
        LIMIT #{pageSize}
    </select>

    <select id="selectMusicListByUser" resultMap="musicDTOMap">
        SELECT music.id,
               title,
               singer,
               lyric,
               composition,
               company,
               album,
               lyric_data,
               duration,
               file_path,
               uploader_id,
               bitrate,
               code_type,
               format
        FROM music
        JOIN favorite ON music.id = favorite.music_id
        WHERE favorite.user_id = #{userId}
          AND music.id > #{lastId}
        ORDER BY music.id DESC, favorite.created_at DESC
        LIMIT #{pageSize}
    </select>


    <insert id="addFavoriteMusic">
        INSERT INTO favorite(music_id, user_id)
        VALUES(#{musicId}, #{userId})
    </insert>


    <select id="selectMusicIsFavorite" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM favorite
        WHERE music_id = #{musicId}
          AND user_id = #{userId}
    </select>

    <delete id="deleteFavoriteMusic">
        DELETE FROM favorite
        WHERE music_id = #{musicId}
          AND user_id = #{userId}
    </delete>


    
</mapper>